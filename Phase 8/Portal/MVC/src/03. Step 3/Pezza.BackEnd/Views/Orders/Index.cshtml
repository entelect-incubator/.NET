@model Portal.Models.PagingModel

@{
    ViewBag.Title = "Order";
ViewBag.ActiveMenu = "Order";
}

<div>
    <a class="btn btn-primary" href="/Orders/Create">
        <i class="fa fa-plus" aria-hidden="true"></i>
        Create Order
    </a>
</div>
<br />
<div class="row">
    <div class="col-6">
        <div id="loading">Loading...</div>
    </div>
    <div class="col-6 text-right">
        <span id="CountData">0</span> Orders
    </div>
</div>
<br />


<table class="table">
    <thead>
        <tr>
            <th class="sortable" data-field="Id" data-orderby="">
                <i class="down fa fa-long-arrow-up" aria-hidden="true"></i>
                <i class="up fa fa-long-arrow-down" aria-hidden="true"></i>
                Id
            </th>
            <th>Customer</th>
            <th>Order</th>
            <th class="sortable text-right" data-field="Amount" data-orderby="">
                <i class="down fa fa-long-arrow-up" aria-hidden="true"></i>
                <i class="up fa fa-long-arrow-down" aria-hidden="true"></i>
                Amount
            </th>
            <th class="sortable" data-field="DateCreated" data-orderby="">
                <i class="down fa fa-long-arrow-up" aria-hidden="true"></i>
                <i class="up fa fa-long-arrow-down" aria-hidden="true"></i>
                Date Created
            </th>
            <th width="100px" class="text-right">Actions</th>
        </tr>
    </thead>
    <tbody id="tbody"></tbody>
    <tfoot id="paginationBar">
        <tr>
            <td colspan="5">
                <div class="btn-group" role="group" aria-label="Basic example">
                    <button id="first" type="button" class="btn btn-secondary">First</button>
                    <button id="prev" type="button" class="btn btn-secondary">Prev</button>
                    <button type="button" class="btn btn-secondary"><span id="pagingData"></span></button>
                    <button id="next" type="button" class="btn btn-secondary">Next</button>
                    <button id="last" type="button" class="btn btn-secondary">Last</button>
                </div>
            </td>
        </tr>
    </tfoot>
</table>

@await Html.PartialAsync("_Modals")

<input type="hidden" id="Count" />
<input type="hidden" id="OrderBy" value="DateCreated asc" />
@Html.HiddenFor(model => model.Limit)
@Html.HiddenFor(model => model.Page)

<!-- Confirm Confirmation Modal -->
<div class="modal fade" id="confirmConfirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row" id="confirmation-error" style="display:none">
                    <div class="col-12">
                        <div class="alert alert-warning alert-with-icon">
                            <button type="button" aria-hidden="true" class="close" data-dismiss="alert" aria-label="Close">
                                <i class="tim-icons icon-simple-remove"></i>
                            </button>
                            <span data-notify="icon" class="tim-icons icon-bulb-63"></span>
                            <span>
                                <b> Error! - </b> Error occured
                            </span>
                        </div>
                    </div>
                </div>

                <div class="row" id="confirmation-success" style="display:none">
                    <div class="col-12">
                        <div class="alert alert-info alert-with-icon">
                            <button type="button" aria-hidden="true" class="close" data-dismiss="alert" aria-label="Close">
                                <i class="tim-icons icon-simple-remove"></i>
                            </button>
                            <span data-notify="icon" class="tim-icons icon-trophy"></span>
                            <span>
                                <b> Success - </b>
                            </span>
                        </div>
                    </div>
                </div>

                <h5 class="modal-title" id="confirmModalLabel">Confirm <span class="confirm-entity"></span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <span class="confirm-name"></span>?
                <input type="hidden" id="confirmId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-link btn-danger" data-dismiss="modal">No</button>
                <button type="button" onclick="confirmConfirmation()" class="btn btn-primary">Yes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        "use strict";

     /*   window.setTimeout(function () {
            window.location.reload();
        }, 10000);*/

        function complete(id, name) {
            $('.confirm-entity').html('Order');
            $('.confirm-name').html("Are you sure you want to complete " + name);
            $('#confirmId').val(id);
            $('#confirmConfirmationModal').modal('show');
        }

        function confirmConfirmation() {
            $(".alert").hide();

            $('#confirmConfirmationModal').modal('hide');
            $.ajax({
                type: "POST",
                url: '@Url.Action("Complete", "Orders")/' + $('#confirmId').val(),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    console.log(data);
                    if (data) {
                        $.alertInfo('Order has been completed', function () {
                            setTimeout(function () { window.location.reload() }, 1500);
                        });
                    }
                    else {
                        $.alertWarning('Error completing Order');
                    }
                },
                error: function (error) {
                    console.log(error);
                    $.alertWarning('Error completing Order');
                }
            });
        }

        function remove(id, name) {
            $('.remove-entity').html('Order');
            $('.remove-name').html("Are you sure you want to remove " + name);
            $('#removeId').val(id);
            $('#confirmationModal').modal('show');
        }

        function confirmRemove() {
            $(".alert").hide();

            $('#confirmationModal').modal('hide');
            var data = { Id: parseInt($('#removeId').val()) };
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete", "Orders")/' + $('#removeId').val(),
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data == true) {
                        $.alertInfo('Order has been removed', function () {
                            setTimeout(function () { window.location.reload() }, 1500);
                        });
                    }
                    else {
                        $.alertWarning('Error removing Order');
                    }
                },
                error: function (error) {
                    console.log(error);
                    $.alertWarning('Error removing Order');
                }
            });
        }

        $(document).ready(function () {
            loadData();
            $('*[data-field="DateCreated"]').find('.up').show();

            $(".sortable").on("click", function () {
                var field = $(this).data("field");

                $('.up').hide();
                $('.down').hide();
                var direction = $(this).data("orderby");

                if (direction == '') {
                    direction = 'asc'
                }

                if (direction == 'asc') {
                    direction = 'desc';
                    $('*[data-field="' + field + '"]').find('.down').show();
                }
                else {
                    direction = 'asc';
                    $('*[data-field="' + field + '"]').find('.up').show();
                }
                $(this).data("orderby", direction);
                var orderby = field + " " + direction;
                $("#OrderBy").val(orderby);
                loadData();
            });

            $("#first").on("click", function () {
                var page = 1;
                $('#Page').val(page);
                loadData();
            });

            $("#prev").on("click", function () {
                var page = parseInt($('#Page').val());
                if (page > 1) {
                    page -= 1;
                    $('#Page').val(page);
                    loadData();
                }
            });

            $("#next").on("click", function () {
                console.log('next');
                var page = parseInt($('#Page').val());
                if (page < parseInt($("#Count").val())) {
                    page += 1;
                    $('#Page').val(page);
                    loadData();
                }
            });

            $("#last").on("click", function () {
                var count = parseInt($("#Count").val());
                var limit = parseInt($("#Limit").val());
                var page = Math.round(count / limit);
                $('#Page').val(page);
                loadData();
            });

            function updatePagingData() {
                var count = parseInt($("#Count").val());
                var limit = parseInt($("#Limit").val());
                var page = parseInt($('#Page').val());
                var lastPage = Math.round(count / limit);
                if (lastPage == 0 || count <= limit) {
                    $("#paginationBar").hide();
                }
                $("#pagingData").html((lastPage > 0) ? page + "/" + lastPage : page);
                $("#CountData").html(count);
            }

            function loadData() {
                $("#loading").show();
                var orderBy = $("#OrderBy").val();

                var dto = new Object;
                dto.Completed = false;

                var searchModel = new Object();
                searchModel.SearchData = dto;
                searchModel.Limit = parseInt($("#Limit").val());
                searchModel.Page = parseInt($('#Page').val());
                searchModel.OrderBy = orderBy;

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("List", "Orders")',
                    data: JSON.stringify(searchModel),
                    contentType: 'application/json; charset=utf-8',
                    success: function (result) {
                        if (result) {
                            $("#Count").val(result.count);

                            var tableBody = '';
                            if (!result.data) {
                                $("#loading").hide();
                                $("#tbody").html('<tr><td colspan="6"> No Order Data</td></tr>');
                                $("#paginationBar").hide();
                            }
                            else if (result.data.length == 0) {
                                $("#loading").hide();
                                $("#tbody").html('<tr><td colspan="6"> No Order Data</td></tr>');
                                $("#paginationBar").hide();
                            }
                            else {
                                for (var i = 0; i < result.data.length; i++) {
                                    var entity = result.data[i];
                                    console.log(entity);
                                    tableBody += '<tr>';
                                    tableBody += '<td>' + entity.id + '</td>';
                                    tableBody += `<td>
                                        ` + entity.customer.name + `<br />
                                        <a class="btn btn-sm" target="_blank" href="tel:` + entity.customer.phone + `">` + entity.customer.phone + `</a><br />
                                        <a class="btn btn-sm" target="_blank" href="email:` + entity.customer.email + `">` + entity.customer.email + `</a>
                                    </td>`;
                                    tableBody += '<td>';
                                    if (entity.orderItems.length > 0) {
                                        for (var j = 0; j < entity.orderItems.length; j++) {
                                            tableBody += entity.orderItems[j].quantity + ' ' + entity.orderItems[j].product.name + '<br/>';
                                        }
                                    }
                                    else {
                                        tableBody += 'No Products';
                                    }
                                    tableBody += '</td>';
                                    tableBody += '<td class="text-right">R' + entity.amount + '</td>';
                                    tableBody += '<td>' + new Date(entity.dateCreated).toLocaleDateString() + '</td>';
                                    tableBody += `<td align="right">
                                    <button onclick="complete(` + entity.id + `, '#` + entity.id + `')" type="button" rel="tooltip" class="btn btn-danger btn-sm btn-round btn-icon remove">
                                        <i class="fa fa-check" aria-hidden="true"></i>
                                    </button>
                                    <button onclick="remove(` + entity.id + `, '` + entity.name + `')" type="button" rel="tooltip" class="btn btn-danger btn-sm btn-round btn-icon remove">
                                        <i class="fa fa-times" aria-hidden="true"></i>
                                    </button>
                                </td>`
                                    tableBody += '</tr>';
                                }

                                $("#loading").hide();
                                $("#tbody").html(tableBody);
                                updatePagingData();
                            }
                        }
                        else {
                            $("#loading").hide();
                            $.alertWarning('No new orders has been placed.');
                        }
                    },
                    error: function (error) {
                        $("#loading").hide();
                        console.log(error);
                        $.alertWarning('Error loading Orders');
                    }
                });
            }
        });
    </script>
}