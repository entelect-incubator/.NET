@model Portal.Models.RestaurantModel

@{
    ViewBag.Title = "Add Restaurant";
ViewBag.ActiveMenu = "Restaurants";
}

@using (Html.BeginForm("Create", "Restaurant", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="form-group">
        <fieldset>
            <legend>Add Restaurant</legend>

            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label class="label-control">Name</label>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", id = "name" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>
                <br />

                <div class="row">
                    <div class="col">
                        <label class="label-control">Upload Image</label>

                        <div class="custom-file overflow-hidden rounded-pill">
                            <input type="file" name="Image" id="Image" class="form-control custom-file-input rounded-pill" />
                            <label for="customFile" class="custom-file-label rounded-pill">Choose file</label>
                        </div>
                    </div>
                </div>

                <br />
                @{ Html.ViewData.TemplateInfo.HtmlFieldPrefix = "Address"; }
                @await Html.PartialAsync("_Address", Model.Address)
                @{ Html.ViewData.TemplateInfo.HtmlFieldPrefix = ""; }

                <div class="row">
                    <div class="col">
                        <label class="label-control">Description</label>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>

                <br />
                <button class="btn btn-primary pull-right" type="submit">Create</button>
            </div>
        </fieldset>
    </div>
}
@section Scripts
{
    <script>
        "use strict";
        $(document).ready(function () {
            $("#Image").change(function (e) {
                var file = e.originalEvent.srcElement.files[0];
                var reader = new FileReader();
                reader.onloadend = function () {
                    var cover = $('#cover');
                    cover.fadeIn();
                    var style = cover.attr('style');
                    style += ';height:300px;background:url("' + reader.result + '") 100% 100%;background-size:cover;';
                    cover.attr('style', style);
                }
                reader.readAsDataURL(file);
            });

            $("#name").on("keyup", function () {
                titleChange($(this).val());
            });

            $("#name").on("change", function () {
                titleChange($(this).val());
            });

            function titleChange(val){
                $('#cover').find("#content").fadeIn().html("<h3 id='title'>" + val + "</h3>");
            }

            $('.datepicker').datetimepicker({
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }
            });
        });
    </script>
}