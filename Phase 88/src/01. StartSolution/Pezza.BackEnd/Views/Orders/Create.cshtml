@model Portal.Models.OrderModel

@{
    ViewBag.Title = "Add Order";
ViewBag.ActiveMenu = "Order";
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <div class="form-group">
        <fieldset>
            <legend>Add Order</legend>

            <div class="form-group">
                <div class="row">
                    <div class="col-12 col-lg-4">
                        <label class="label-control">Restaurant</label>
                        @Html.DropDownListFor(model => model.RestaurantId, Model.Restaurants, "Select a Restaurant", new { @class = "form-control" })
                    </div>
                    <div class="col-12 col-lg-8">
                        <label class="label-control">Customer</label>
                        <div class="input-group">
                            @Html.DropDownListFor(model => model.CustomerId, Model.Customers, "Select a Customer", new { @class = "form-control" })
                            <div class="input-group-append">
                                <button type="button" onclick="openCreateCustomer()" class="btn btn-primary" style="margin: -1px;">Add Customer</button>
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div id="orderItemsView"></div>
                </div>
                <br />

                @Html.HiddenFor(model => model.Amount)
                <button class="btn btn-primary pull-right" type="submit">Place Order <span id="DisplayAmount">R0</span></button>
            </div>
        </fieldset>
    </div>
    <!--Customer Create Modal-->
    <div class="modal fade" id="customerModal" tabindex="-1" role="dialog" aria-labelledby="removeModalLabel" aria-hidden="true" style="display:none">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="removeModalLabel">Add Customer <span class="remove-entity"></span></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="customerCreateView"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link btn-danger" data-dismiss="modal">Cancel</button>
                    <button type="button" onclick="createCustomer()" class="btn btn-primary">Create</button>
                </div>
            </div>
        </div>
    </div>

    <div id="orderItems">

    </div>
}
@section Scripts
{
    <script>
        "use strict";
        var orderItems = new Array();

        function createCustomer() {
            var apiUrl = '@Common.AppSettings.ApiUrl';

            var cust = new Object();
            cust.Name = $('#CustomerName').val();
            cust.Phone = $('#CustomerPhone').val();
            cust.Email = $('#CustomerEmail').val();
            cust.ContactPerson = $('#CustomerContactPerson').val();
            cust.Address = new Object();
            cust.Address.Address = $('#Address_Address').val();
            cust.Address.City = $('#City').val();
            cust.Address.Province = $('#Province').val();
            cust.Address.PostalCode = $('#Address_PostalCode').val();

            if (cust != null) {
                $.ajax({
                    type: "POST",
                    url: apiUrl + "Customer",
                    data: JSON.stringify(cust),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        console.log(response);
                        if (response != null) {
                            $('#customerModal').modal('hide');
                            $("#CustomerId").append("<option value='" + response.id + "'>" + response.name + " " + response.phone + "</option>");
                            $("#CustomerId").val("" + response.id).change();
                        } else {
                            $.alertWarning('Error creating Customer');
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }
        }

        function addProduct() {
            var total = 0;
            orderItems = new Array();
            $(".product").each(function () {
                var id = $(this).find("#productId").val();
                var qty = parseInt($(this).find("#Quantity").val());
                if (qty > 0) {
                    var amount = qty * parseFloat($(this).find(".price").html());
                    total += amount;

                    var orderItem = {};
                    orderItem.ProductId = parseInt(id);
                    orderItem.Quantity = qty;
                    orderItems.push(orderItem);
                }
            });

            var orderItemsHtml = "";
            for (var i = 0; i < orderItems.length; i++) {
                orderItemsHtml += "<input type='hidden' name='OrderItems[" + i + "].ProductId' value='" + orderItems[i].ProductId + "' />";
                orderItemsHtml += "<input type='hidden' name='OrderItems[" + i + "].Quantity' value='" + orderItems[i].Quantity + "' />";
            }
            $("#orderItems").html(orderItemsHtml);

            $("#DisplayAmount").html("R" + total);
            $("#Amount").val(total);
        }

        function openCreateCustomer() {
            $('#customerModal').modal('show');
            loadAddressData();
        }

        function loadAddressData() {
            var zaData = {};
            var city = [];
            var province = [];
            var base_url = window.location.origin;
            $.getJSON(base_url + '/data/za.json', function (data) {
                zaData = data;
                $.each(zaData, function (i, v) {
                    city.push(v.city);
                    if ($.inArray(v.admin_name, province) === -1) province.push(v.admin_name);
                });

                city = city.sort();
                province = province.sort();

                for (var i = 0; i < city.length; i++) {
                    $("#City").append("<option>" + city[i] + "</option>");
                }

                for (var j = 0; j < province.length; j++) {
                    $("#Province").append("<option>" + province[j] + "</option>");
                }
            });
        }

        $(document).ready(function () {
            $('#orderItemsView').load('@Url.Action("OrderItem", "Orders")');
            $('#customerCreateView').load('@Url.Action("CreatePartial", "Customer")');
        });
    </script>
}
